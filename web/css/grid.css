.grid {
    border-collapse: collapse;
    display: inline-block;
    transition: all 0.5s ease-in-out;
    border-color: #444;
}

.grid td {
    border: 2px solid;
    border-color: inherit;
    transition: border-color 0.5s ease-in-out;
    width: 50px;
    height: 50px;
}

/* Blur and disable grid */
.grid[disabled] {
    pointer-events: none;
    -webkit-filter: blur(5px);
    -moz-filter: blur(5px);
    -o-filter: blur(5px);
    filter: blur(5px);
}

/* Hide grid while loading */
.grid[hidden] {
    opacity: 0;
}

/* No outside borders */

/* Remove top border of cells in the top row */
.grid tr:first-child td {
    border-top-color: transparent;
}

/* Remove bottom border of cells in the bottom row*/
.grid tr:last-child td {
    border-bottom-color: transparent;
}

/* Remove left border of cells in the first column */
.grid tr td:first-child {
    border-left-color: transparent;
}

/* remove right border of cells in the last column */
.grid tr td:last-child {
    border-right-color: transparent;
}

/* Set cursor to the current player's icon */

.cursors .grid[data-turn="X"]:hover {
    cursor: url(../img/cursor_X.png), pointer;
}

.cursors .grid[data-turn="O"]:hover {
    cursor: url(../img/cursor_O.png), pointer;
}

.cursors .grid[data-turn="D"]:hover {
    cursor: url(../img/cursor_D.png), pointer;
}

/* When the konami code has been used */

.konami.cursors .grid[data-turn="X"]:hover {
    cursor: url(../img/cursor_X_k.png), pointer;
}

.konami.cursors .grid[data-turn="O"]:hover {
    cursor: url(../img/cursor_O_k.png), pointer;
}

.konami.cursors .grid[data-turn="D"]:hover {
    cursor: url(../img/cursor_D_k.png), pointer;
}

/* Fill in the background of hovered empty cells */

.cell-colours .grid[data-turn="X"] td[data-player="NULL"]:hover {
    background-color: #FFECB3;
}

.cell-colours .grid[data-turn="O"] td[data-player="NULL"]:hover {
    background-color: #C8E6C9;
}

.cell-colours .grid[data-turn="D"] td[data-player="NULL"]:hover {
    background-color: #E1BEE7;
}

/* Placed moves */

/* All non-empty cells */
.grid td:not([data-player="NULL"]) {
    background-position: center center;
    background-size: contain;
    background-repeat: no-repeat;
    pointer-events: none;
}

/* Cells with an X */
.grid td[data-player="X"] {
    background-image: url(../img/player_X.svg);
}

/* Cells with an O */
.grid td[data-player="O"] {
    background-image: url(../img/player_O.svg);
}

/* Cells with a D */
.grid td[data-player="D"] {
    background-image: url(../img/player_D.svg);
}

/* After the konami code */

/* Cells with an X */
.konami .grid td[data-player="X"] {
    background-image: url(../img/player_X_k.svg);
}

/* Cells with an O */
.konami .grid td[data-player="O"] {
    background-image: url(../img/player_O_k.svg);
}

/* Cells with a D */
.konami .grid td[data-player="D"] {
    background-image: url(../img/player_D_k.svg);
}

/* If cell colours are enabled */

.cell-colours .grid td[data-player="X"] {
    background-color: #FFECB3;
}

.cell-colours .grid td[data-player="O"] {
    background-color: #C8E6C9;
}

.cell-colours .grid td[data-player="D"] {
    background-color: #E1BEE7;
}

/* Selected cells */
.grid td[data-player="X"].selected-X::after,
.grid td[data-player="O"].selected-O::after,
.grid td[data-player="D"].selected-D::after {
    content: "";
    display: block;
    width: calc(100% - 10px);
    height: 100%;
    border: 5px solid #F44336;
}